/*
********************************************************************************
* circle.h
*
*   Author: AlexShi <shiweining123@gmail.com>
*
********************************************************************************
*/

#ifndef __CIRCLE_H
#define __CIRCLE_H

/*
********************************************************************************
* Included Files
********************************************************************************
*/

#include "shape.h"

/*
********************************************************************************
* Pre-processor Definitions
********************************************************************************
*/

#define DEF_PI 3.1415926f
#define CIRCLE(object)   ((circle_t *)(object))

/*
********************************************************************************
* Shared Types
********************************************************************************
*/



/*
********************************************************************************
* Public Types
********************************************************************************
*/

typedef struct _circle circle_t;

/* 子类:圆 */
struct _circle {
    /* 将父类定义在子类的第一个元素,来继承父类 */
    shape_t super;
    /* 子类私有属性 */
    void *priv;
};

/*
********************************************************************************
* Inline Functions
********************************************************************************
*/



/*
********************************************************************************
* Shared Data
********************************************************************************
*/



/*
********************************************************************************
* Public Data
********************************************************************************
*/



/*
********************************************************************************
* Public Function Prototypes
********************************************************************************
*/

#ifdef __cplusplus
#define EXTERN extern "C"
extern "C" {
#else
#define EXTERN extern
#endif

EXTERN circle_t* circle_create(float diameter);

#undef EXTERN
#ifdef __cplusplus
}
#endif

#endif      /* __CIRCLE_H */

/*
********************************************************************************
* No More!
********************************************************************************
*/
